select(set_id, datetime, `Gobierno de coalición de izquierdas`= "coalition_left", `Gobierno de coalición mixto*`="coalition_trans", `Gobierno de coalición de soberanistas`="coalition_indy", `Gobierno monocolor de izquierdas`="singlecolor_left", `Gobierno monocolor mixto*`="singlecolor_trans", `Gobierno monocolor de soberanistas`="singlecolor_indy", `Repetición electoral`="sum") %>%
gather("type", "prob", c(`Gobierno de coalición de izquierdas`:`Repetición electoral`)) %>%
mutate(coloract = ifelse(str_detect(type, "Gobierno de coalición de izquierdas"), "#9A0000",
ifelse(str_detect(type,  "Gobierno de coalición mixto*"), "#66bb6a",
ifelse(str_detect(type,  "Gobierno de coalición de soberanistas"), "#d4e157",
ifelse(str_detect(type,  "Gobierno monocolor de izquierdas"), "#FF3827",
ifelse(str_detect(type,  "Gobierno monocolor mixto*"), "#338a3e",
ifelse(str_detect(type,  "Gobierno monocolor de soberanistas"), "#a0af22",
ifelse(str_detect(type,  "Repetición electoral"), "#babdbe",
"other"))))))))
View(bar_gather)
index_graph <- sub_gather %>%
bind_rows(bar_gather) %>%
spread(set_id, prob) %>%
select(datetime, type, coloract, España= "espana", `C. Madrid`="cmadrid", Aragón="aragon", `I. Baleares`="baleares", Extremadura="extremadura", Madrid="madrid", Barcelona="barcelona", Valencia="valencia") %>%
gather("set_id", "prob", c(España:Valencia))
View(index_graph)
index_graph <- sub_gather %>%
bind_rows(bar_gather) %>%
spread(set_id, prob) %>%
select(datetime, type, coloract, España= "espana", `C. Madrid`="cmadrid", Aragón="aragon", `I. Baleares`="baleares", Extremadura="extremadura", Madrid="madrid", Barcelona="barcelona", Valencia="valencia") %>%
gather("set_id", "prob", c(España:Valencia)) %>%
group_by(set_id, type) %>%
filter(datetime == max(datetime))
View(index_graph)
index_graph <- sub_gather %>%
bind_rows(bar_gather) %>%
spread(set_id, prob)
View(gobierno_bal_19)
View(index_graph)
index_graph <- sub_gather %>%
bind_rows(bar_gather) %>%
spread(set_id, prob) %>%
select(datetime, type, coloract, España= "espana", `C. Madrid`="cmadrid", Aragón="aragon", `I. Baleares`="baleares", Extremadura="extremadura", Madrid="madrid", Barcelona="barcelona", Valencia="valencia")
View(index_graph)
index_graph <- sub_gather %>%
bind_rows(bar_gather) %>%
spread(set_id, prob) %>%
select(datetime, type, coloract, España= "espana", `C. Madrid`="cmadrid", Aragón="aragon", `I. Baleares`="baleares", Extremadura="extremadura", Madrid="madrid", Barcelona="barcelona", Valencia="valencia") %>%
gather("set_id", "prob", c(España:Valencia))
View(index_graph)
View(index_graph)
index_graph <- sub_gather %>%
bind_rows(bar_gather) %>%
spread(set_id, prob) %>%
select(datetime, type, coloract, España= "espana", `C. Madrid`="cmadrid", Aragón="aragon", `I. Baleares`="baleares", Extremadura="extremadura", Madrid="madrid", Barcelona="barcelona", Valencia="valencia") %>%
gather("set_id", "prob", c(España:Valencia)) %>%
group_by(set_id, type) %>%
drop_na() %>%
filter(datetime == max(datetime))
View(index_graph)
index_graph <- sub_gather %>%
bind_rows(bar_gather) %>%
spread(set_id, prob) %>%
select(datetime, type, coloract, España= "espana", `C. Madrid`="cmadrid", Aragón="aragon", `I. Baleares`="baleares", Extremadura="extremadura", Madrid="madrid", Barcelona="barcelona", Valencia="valencia") %>%
gather("set_id", "prob", c(España:Valencia)) %>%
group_by(set_id, type) %>%
drop_na() %>%
filter(datetime == max(datetime)) %>%
mutate_if(is.numeric, round, 2) %>%
select(coloract, datetime, set_id, type, prob)
index_graph %>%
hchart(., type = "column",
hcaes(x = set_id,
y = prob,
group = type,
color = coloract)) %>%
hc_plotOptions(column = list(stacking = "normal")) %>%
hc_yAxis(max = 100) %>%
hc_yAxis(opposite = FALSE,
labels = list(format = "{value}%")) %>%
hc_tooltip(pointFormat = '{point.y:.1f}% ')
index_graph %>%
hchart(., type = "column",
hcaes(x = set_id,
y = prob,
group = type,
color = coloract)) %>%
hc_plotOptions(column = list(stacking = "normal")) %>%
hc_yAxis(max = 100) %>%
hc_yAxis(opposite = FALSE,
labels = list(format = "{value}%")) %>%
hc_tooltip(pointFormat = '{point.y:.1f}% ') %>%
hc_xAxis(title = list(text = "Gobierno resultante en...")) %>%
hc_yAxis(title = list(text = "Probabilidad estimada"))
index_graph %>%
hchart(., type = "column",
hcaes(x = set_id,
y = prob,
group = type,
color = coloract)) %>%
hc_plotOptions(column = list(stacking = "normal")) %>%
hc_yAxis(max = 100) %>%
hc_yAxis(opposite = FALSE,
labels = list(format = "{value}%")) %>%
hc_tooltip(pointFormat = '{point.y:.1f}% ') %>%
hc_xAxis(title = list(text = "Gobierno resultante en...")) %>%
hc_yAxis(title = list(text = "Probabilidad estimada")) %>%
hc_legend(enabled = T)
index_graph %>%
hchart(., type = "column",
hcaes(x = set_id,
y = prob,
group = type,
color = coloract)) %>%
hc_plotOptions(column = list(stacking = "normal")) %>%
hc_yAxis(max = 100) %>%
hc_yAxis(opposite = FALSE,
labels = list(format = "{value}%")) %>%
hc_tooltip(pointFormat = '{point.y:.1f}% ') %>%
hc_xAxis(title = list(text = "Gobierno resultante en...")) %>%
hc_yAxis(title = list(text = "Probabilidad estimada")) %>%
hc_legend(enabled = F)
index_graph %>%
hchart(., type = "column",
hcaes(x = set_id,
y = prob,
group = type,
color = coloract)) %>%
hc_plotOptions(column = list(stacking = "normal")) %>%
hc_yAxis(max = 100) %>%
hc_yAxis(opposite = FALSE,
labels = list(format = "{value}%")) %>%
hc_tooltip(pointFormat = '{point.y:.1f}% ') %>%
hc_xAxis(title = list(text = "Gobierno resultante en...")) %>%
hc_yAxis(title = list(text = "Probabilidad estimada")) %>%
hc_legend(enabled = F)
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/ortega/Desktop/website/predi.io")
#render your sweet site.
rmarkdown::render_site()
index_graph %>%
hchart(., type = "column",
hcaes(x = set_id,
y = prob,
group = type,
color = coloract)) %>%
hc_plotOptions(column = list(stacking = "normal")) %>%
hc_yAxis(max = 100) %>%
hc_xAxis(title = list(text = "Gobierno resultante en...")) %>%
hc_yAxis(title = list(text = "Probabilidad estimada")) %>%
hc_legend(enabled = F)
hc_yAxis(opposite = FALSE,
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/ortega/Desktop/website/predi.io")
#render your sweet site.
rmarkdown::render_site()
hcaes(x = set_id,
group = type,
hc_plotOptions(column = list(stacking = "normal")) %>%
hc_yAxis(opposite = FALSE,
index_graph %>%
hchart(., type = "column",
hcaes(x = set_id,
y = prob,
group = type,
color = coloract)) %>%
hc_plotOptions(column = list(stacking = "normal")) %>%
hc_yAxis(max = 100) %>%
hc_yAxis(opposite = FALSE,
labels = list(format = "{value}%")) %>%
hc_tooltip(pointFormat = '{point.y:.1f}% ') %>%
hc_xAxis(title = list(text = "Gobierno resultante en...")) %>%
hc_yAxis(title = list(text = "Probabilidad estimada")) %>%
hc_legend(enabled = F)
index_graph %>%
index_graph %>%
hchart(., type = "column",
hcaes(x = set_id,
y = prob,
group = type,
color = coloract)) %>%
hc_plotOptions(column = list(stacking = "normal")) %>%
hc_yAxis(max = 100) %>%
hc_yAxis(opposite = FALSE,
labels = list(format = "{value}%")) %>%
hc_tooltip(pointFormat = '{point.y:.1f}% ') %>%
hc_xAxis(title = list(text = "Gobierno resultante en...")) %>%
hc_yAxis(title = list(text = "Probabilidad estimada"))
index_graph %>%
hchart(., type = "column",
hcaes(x = set_id,
y = prob,
group = type,
color = coloract)) %>%
hc_plotOptions(column = list(stacking = "normal")) %>%
hc_yAxis(max = 100) %>%
hc_yAxis(opposite = FALSE,
labels = list(format = "{value}%")) %>%
hc_tooltip(pointFormat = '{point.y:.1f}% ') %>%
hc_xAxis(title = list(text = "Gobierno resultante en...")) %>%
hc_yAxis(title = list(text = "Probabilidad estimada")) %>%
hc_legend(enabled = F)
index_graph %>%
hchart(., type = "column",
hcaes(x = set_id,
y = prob,
group = type,
color = coloract)) %>%
hc_plotOptions(column = list(stacking = "normal")) %>%
hc_yAxis(max = 100) %>%
hc_xAxis(title = list(text = "Gobierno resultante en...")) %>%
hc_yAxis(title = list(text = "Probabilidad estimada")) %>%
hc_legend(enabled = F)
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/ortega/Desktop/website/predi.io")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/ortega/Desktop/website/predi.io")
#render your sweet site.
rmarkdown::render_site()
bar_gather <-bar_set %>%
ungroup(datetime) %>%
select(set_id, datetime, `Gobierno de coalición de izquierdas`= "coalition_left", `Gobierno de coalición mixto*`="coalition_trans", `Gobierno de coalición de soberanistas`="coalition_indy", `Gobierno monocolor de izquierdas`="singlecolor_left", `Gobierno monocolor mixto*`="singlecolor_trans", `Gobierno monocolor de soberanistas`="singlecolor_indy", `Repetición electoral`="sum") %>%
gather("type", "prob", c(`Gobierno de coalición de izquierdas`:`Repetición electoral`)) %>%
mutate(coloract = ifelse(str_detect(type, "Gobierno de coalición de izquierdas"), "#9A0000",
ifelse(str_detect(type,  "Gobierno de coalición mixto*"), "#66bb6a",
ifelse(str_detect(type,  "Gobierno de coalición de soberanistas"), "#c79a00",
ifelse(str_detect(type,  "Gobierno monocolor de izquierdas"), "#FF3827",
ifelse(str_detect(type,  "Gobierno monocolor mixto*"), "#338a3e",
ifelse(str_detect(type,  "Gobierno monocolor de soberanistas"), "#ffca28",
ifelse(str_detect(type,  "Repetición electoral"), "#babdbe",
"other"))))))))
index_graph <- sub_gather %>%
bind_rows(bar_gather) %>%
spread(set_id, prob) %>%
select(datetime, type, coloract, España= "espana", `C. Madrid`="cmadrid", Aragón="aragon", `I. Baleares`="baleares", Extremadura="extremadura", Madrid="madrid", Barcelona="barcelona", Valencia="valencia") %>%
gather("set_id", "prob", c(España:Valencia)) %>%
group_by(set_id, type) %>%
drop_na() %>%
filter(datetime == max(datetime)) %>%
mutate_if(is.numeric, round, 2) %>%
select(coloract, datetime, set_id, type, prob)
index_graph %>%
hchart(., type = "column",
hcaes(x = set_id,
y = prob,
group = type,
color = coloract)) %>%
hc_plotOptions(column = list(stacking = "normal")) %>%
hc_yAxis(max = 100) %>%
hc_xAxis(title = list(text = "Gobierno resultante en...")) %>%
hc_yAxis(title = list(text = "Probabilidad estimada")) %>%
hc_legend(enabled = F)
bar_gather <-bar_set %>%
ungroup(datetime) %>%
select(set_id, datetime, `Gobierno de coalición de izquierdas`= "coalition_left", `Gobierno de coalición mixto*`="coalition_trans", `Gobierno de coalición de soberanistas`="coalition_indy", `Gobierno monocolor de izquierdas`="singlecolor_left", `Gobierno monocolor mixto*`="singlecolor_trans", `Gobierno monocolor de soberanistas`="singlecolor_indy", `Repetición electoral`="sum") %>%
gather("type", "prob", c(`Gobierno de coalición de izquierdas`:`Repetición electoral`)) %>%
mutate(coloract = ifelse(str_detect(type, "Gobierno de coalición de izquierdas"), "#9A0000",
ifelse(str_detect(type,  "Gobierno de coalición mixto*"), "#8c7b75",
ifelse(str_detect(type,  "Gobierno de coalición de soberanistas"), "#c79a00",
ifelse(str_detect(type,  "Gobierno monocolor de izquierdas"), "#FF3827",
ifelse(str_detect(type,  "Gobierno monocolor mixto*"), "#bcaaa4",
ifelse(str_detect(type,  "Gobierno monocolor de soberanistas"), "#ffca28",
ifelse(str_detect(type,  "Repetición electoral"), "#babdbe",
"other"))))))))
gobierno_bar_19 <- bar_set %>%
mutate_at(vars(3:8), ~(.*96)/100) %>%
mutate_if(is.numeric, round, 2) %>%
mutate(datetime2 = as.Date(datetime, 'd%.m%.Y%')) %>%
arrange(datetime2)
index_graph <- sub_gather %>%
bind_rows(bar_gather) %>%
spread(set_id, prob) %>%
select(datetime, type, coloract, España= "espana", `C. Madrid`="cmadrid", Aragón="aragon", `I. Baleares`="baleares", Extremadura="extremadura", Madrid="madrid", Barcelona="barcelona", Valencia="valencia") %>%
gather("set_id", "prob", c(España:Valencia)) %>%
group_by(set_id, type) %>%
drop_na() %>%
filter(datetime == max(datetime)) %>%
mutate_if(is.numeric, round, 2) %>%
select(coloract, datetime, set_id, type, prob)
index_graph %>%
hchart(., type = "column",
hcaes(x = set_id,
y = prob,
group = type,
color = coloract)) %>%
hc_plotOptions(column = list(stacking = "normal")) %>%
hc_yAxis(max = 100) %>%
hc_xAxis(title = list(text = "Gobierno resultante en...")) %>%
hc_yAxis(title = list(text = "Probabilidad estimada")) %>%
hc_legend(enabled = F)
bar_gather <-bar_set %>%
ungroup(datetime) %>%
select(set_id, datetime, `Gobierno de coalición de izquierdas`= "coalition_left", `Gobierno de coalición mixto*`="coalition_trans", `Gobierno de coalición de soberanistas`="coalition_indy", `Gobierno monocolor de izquierdas`="singlecolor_left", `Gobierno monocolor mixto*`="singlecolor_trans", `Gobierno monocolor de soberanistas`="singlecolor_indy", `Repetición electoral`="sum") %>%
gather("type", "prob", c(`Gobierno de coalición de izquierdas`:`Repetición electoral`)) %>%
mutate(coloract = ifelse(str_detect(type, "Gobierno de coalición de izquierdas"), "#9A0000",
ifelse(str_detect(type,  "Gobierno de coalición mixto*"), "#bf5f82",
ifelse(str_detect(type,  "Gobierno de coalición de soberanistas"), "#c79a00",
ifelse(str_detect(type,  "Gobierno monocolor de izquierdas"), "#FF3827",
ifelse(str_detect(type,  "Gobierno monocolor mixto*"), "#f48fb1",
ifelse(str_detect(type,  "Gobierno monocolor de soberanistas"), "#ffca28",
ifelse(str_detect(type,  "Repetición electoral"), "#babdbe",
"other"))))))))
index_graph <- sub_gather %>%
bind_rows(bar_gather) %>%
spread(set_id, prob) %>%
select(datetime, type, coloract, España= "espana", `C. Madrid`="cmadrid", Aragón="aragon", `I. Baleares`="baleares", Extremadura="extremadura", Madrid="madrid", Barcelona="barcelona", Valencia="valencia") %>%
gather("set_id", "prob", c(España:Valencia)) %>%
group_by(set_id, type) %>%
drop_na() %>%
filter(datetime == max(datetime)) %>%
mutate_if(is.numeric, round, 2) %>%
select(coloract, datetime, set_id, type, prob)
index_graph %>%
hchart(., type = "column",
hcaes(x = set_id,
y = prob,
group = type,
color = coloract)) %>%
hc_plotOptions(column = list(stacking = "normal")) %>%
hc_yAxis(max = 100) %>%
hc_xAxis(title = list(text = "Gobierno resultante en...")) %>%
hc_yAxis(title = list(text = "Probabilidad estimada")) %>%
hc_legend(enabled = F)
highchart() %>%
hc_xAxis(categories = gobierno_bar_19$datetime2, tickInterbar = 1) %>%
hc_add_series(name = "Gobierno de coalición de izquierdas", data = gobierno_bar_19$coalition_left , color = "#9A0000") %>%
hc_add_series(name = "Gobierno de coalición de centro", data = gobierno_bar_19$coalition_trans, color= "#C57420") %>%
hc_add_series(name = "Gobierno de coalición de derechas", data = gobierno_bar_19$coalition_indy, color = "#0000BA") %>%
hc_add_series(name = "Gobierno monocolor de izquierdas", data = gobierno_bar_19$singlecolor_left, color= "#FF3827") %>%
hc_add_series(name = "Gobierno monocolor de centro", data = gobierno_bar_19$singlecolor_trans, color= "#FF9300") %>%
hc_add_series(name = "Gobierno monocolor de derechas", data = gobierno_bar_19$singlecolor_indy, color= "#04AAFF") %>%
hc_tooltip(crosshairs = TRUE, backgroundColor = "#FBFEFF",
shared = TRUE, borderWidth = 0, sort = TRUE,  table = TRUE)
_[¿Y la Europea? Pincha aquí para acceder a nuestra predicción sobre quién será el próximo presidente de la Comisión Europea?](https://aloport.github.io/predi/gobierno_eu_19.html)_
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/ortega/Desktop/website/predi.io")
#render your sweet site.
rmarkdown::render_site()
_[¿Y la Europea?](https://aloport.github.io/predi/gobierno_eu_19.html)_
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/ortega/Desktop/website/predi.io")
#render your sweet site.
rmarkdown::render_site()
index_graph %>%
hchart(., type = "column",
hcaes(x = set_id,
y = prob,
group = type,
color = coloract)) %>%
hc_plotOptions(column = list(stacking = "normal")) %>%
hc_yAxis(max = 100) %>%
hc_xAxis(enabled = F) %>%
hc_yAxis(title = list(text = "Probabilidad estimada")) %>%
hc_legend(enabled = F)
index_graph %>%
hchart(., type = "column",
hcaes(x = set_id,
y = prob,
group = type,
color = coloract)) %>%
hc_plotOptions(column = list(stacking = "normal")) %>%
hc_yAxis(max = 100) %>%
hc_xAxis(title = list(text = "")) %>%
hc_yAxis(title = list(text = "Probabilidad estimada")) %>%
hc_legend(enabled = F)
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/ortega/Desktop/website/predi.io")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/ortega/Desktop/website/predi.io")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/ortega/Desktop/website/predi.io")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/ortega/Desktop/website/predi.io")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/ortega/Desktop/website/predi.io")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/ortega/Desktop/website/predi.io")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/ortega/Desktop/website/predi.io")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/ortega/Desktop/website/predi.io")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/ortega/Desktop/website/predi.io")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/ortega/Desktop/website/predi.io")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/ortega/Desktop/website/predi.io")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/ortega/Desktop/website/predi.io")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/ortega/Desktop/website/predi.io")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/ortega/Desktop/website/predi.io")
#render your sweet site.
rmarkdown::render_site()
View(sub_gather)
index_graph <- sub_gather %>%
bind_rows(bar_gather) %>%
spread(set_id, prob) %>%
select(datetime, type, coloract, España= "espana", `C. Madrid`="cmadrid", Aragón="aragon", `I. Baleares`="baleares", Extremadura="extremadura", Madrid="madrid", Barcelona="barcelona", Valencia="valencia") %>%
gather("set_id", "prob", c(España:Valencia)) %>%
group_by(set_id, type) %>%
drop_na() %>%
filter(datetime == max(datetime))
View(index_graph)
gobierno_esp_19 <- sub_set %>%
filter(set_id=="espana") %>%
mutate_at(vars(3:8), ~(.*96)/100) %>%
mutate_if(is.numeric, round, 2) %>%
mutate(datetime2 = as.Date(datetime, 'd%.m%.Y%')) %>%
arrange(datetime2)
highchart() %>%
hc_xAxis(categories = gobierno_esp_19$datetime2, tickInterval = 1) %>%
hc_add_series(name = "Gobierno de coalición de izquierdas", data = gobierno_esp_19$coalition_left , color = "#9A0000") %>%
hc_add_series(name = "Gobierno de coalición de centro", data = gobierno_esp_19$coalition_center, color= "#C57420") %>%
hc_add_series(name = "Gobierno de coalición de derechas", data = gobierno_esp_19$coalition_right, color = "#0000BA") %>%
hc_add_series(name = "Gobierno monocolor de izquierdas", data = gobierno_esp_19$singlecolor_left, color= "#FF3827") %>%
hc_add_series(name = "Gobierno monocolor de centro", data = gobierno_esp_19$singlecolor_center, color= "#FF9300") %>%
hc_add_series(name = "Gobierno monocolor de derechas", data = gobierno_esp_19$singlecolor_right, color= "#04AAFF") %>%
hc_add_series(name = "Repetición de elecciones", data = gobierno_esp_19$repetition_elections, color= "#A9A9A9")   %>%
hc_tooltip(crosshairs = TRUE, backgroundColor = "#FBFEFF",
shared = TRUE, borderWidth = 0, sort = TRUE,  table = TRUE)
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/ortega/Desktop/website/predi.io")
#render your sweet site.
rmarkdown::render_site()
